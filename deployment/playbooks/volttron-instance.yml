---
- import_playbook: includes/ensure_host_keys.yml

# Running this allows us to set the variables that are going to be used in the
# environment block before the execution of the second play.
- name: environmental setup
  hosts: all
  tasks:
    - include_tasks: includes/defaults.yml

- hosts: all
#  become: yes
#  become_method: sudo
  gather_facts: True
  environment:
    VOLTTRON_HOME: "{{ volttron_home }}"
    VOLTTRON_ROOT: "{{ volttron_root }}"
    # CONFIG: "{{ host_configs_dir }}"
    HOST_CONFIG: "{{ host_config }}"
  tasks:
    - include_tasks: includes/common.yml

    - set_fact:
        local_remote_config_file: "{{lookup('env','DEPLOYMENT_ROOT')}}/{{inventory_hostname}}/{{inventory_hostname}}.yml"
        local_configs_dir: "{{lookup('env','DEPLOYMENT_ROOT')}}/{{inventory_hostname}}/configs"
        python3: "{{lookup('env','DEPLOYMENT_ROOT')}}/env/bin/python"

    - include_tasks: includes/copy_configs.yml

    - name: Configure VOLTTRON instance (agent install phase)
      volttron_instance_config:
        volttron_home: volttron_home
        config_file: "{{ host_config }}"
        state: "RUNNING"
        phase: "AGENT_INSTALL"
        # This variable must be passed on for the module to be able to be used
        # if using the vctl deploy script this variable is created via extra_vars
        volttron_host_facts: "{{ volttron_host_facts }}"

    - name: Configure VOLTTRON instance (external connection phase)
      volttron_instance_config:
        config_file: "{{ host_config }}"
        state: "RUNNING"
        phase: "ALLOW_EXTERNAL_CONNECTIONS"
        # This variable must be passed on for the module to be able to be used
        # if using the vctl deploy script this variable is created via extra_vars
        volttron_host_facts: "{{ volttron_host_facts }}"

    - name: Configure VOLTTRON instance (start agents phase)
      volttron_instance_config:
        config_file: "{{ host_config }}"
        state: "RUNNING"
        phase: "START_AGENTS"
        # This variable must be passed on for the module to be able to be used
        # if using the vctl deploy script this variable is created via extra_vars
        volttron_host_facts: "{{ volttron_host_facts }}"


#    - name: Load all hosts state into variable
#      host

#      register: instance_state
#
#    - include_tasks: includes/update_facts.yml
#      vars:
#        host_config: "{{ ansible_env.HOME }}/host.config.yml"

#    - name: Lookup host path variables we know about for instances
#      delegate_to: localhost
#      vars:
#          ansible_python_interpreter: "{{ ansible_playbook_python }}"
#      find:
#        paths: /tmp/facts_cache/
#      register: all_my_hosts
#    - include_tasks: includes/register_all_hosts.yml
#    - name: load json data
#      delegate_to: localhost
#      vars:
#        ansible_python_interpreter: "/home/osboxes/repos/volttron/env/bin/python"
#      volttron_host_facts:
#        host_cache_dir: /home/osboxes/facts_cache/
#      register: all_hosts_facts
#
#    - debug:
#        var: all_hosts_facts
#    - meta:
#        action: end_play
#
#
#    - name: Build all_hosts dictionary
#      include_vars:
#        #dir: /tmp/facts_cache
#        file: "{{item.path}}" #/tmp/facts_cache/web
#        #extensions: ['']
#        name: my_data
#      with_items: "{{ all_my_hosts.files }}"
#      register: all_hosts

#    - name: Configure VOLTTRON instance (allow external collection phase)
#      volttron_instance_config:
#        config_file: "{{ host_config }}"
#        state: "RUNNING"
#        phase: "ALLOW_EXTERNAL_CONNECTIONS"
#        volttron_host_facts: "{{ volttron_host_facts }}"
#      register: external_connections_setup

#    - name: Configure VOLTTRON instance (tag priority startup agents)
#      volttron_instance_config:
#        config_file: "{{ host_config }}"
#        state: "RUNNING"
#        phase: "START_AGENTS"
#      register: instance_state_final


#    - debug:
#        var: instance_state
#
#
#    - name: Installing agents
#      include_tasks: "install-agents.yml"
#      #when: "'No installed Agents found' in (volttron_status.stderr_lines)"

#    - name: Ensures {{ volttron_home }} dir exists
#      file:
#        path: "{{ volttron_home }}"
#        state: directory
#
#    - name: Create {{ volttron_home }}/config
#      template:
#        src: volttron-config.j2
#        dest: "{{ volttron_home }}/config"

#    - name: Create service file.
#      template:
#        src: volttron.service.j2
#        dest: "/etc/systemd/system/volttron.service"
#        mode: 0755


# - name: copy configs for {{ inventory_hostname }}
      #    copy:
      #      # Note the / on the end means we don't want the containing folder
      #      # only the files underneath.  So ignore 'sigma1' if it was the
      #      # host.
      #      src: "{{ local_configuration_path }}/{{ inventory_hostname }}/"
      #      dest: "{{ vlt_configuration_path }}"
      #      mode: 0644
      #    become_user: "{{ vlt_user }}"
      #    become: yes
      #    when: directory_check.stat.exists
      #
      #  - name: check for host configuration_store files
      #    local_action: stat path="{{ local_configstore_path }}/{{ inventory_hostname }}"
      #    register: directory_check
      #    ignore_errors: True
      #
      #  - name: copy configuration_store for {{ inventory_hostname }} to the instance's home.
      #    copy:
      #      # Note the / on the end means we don't want the containing folder
      #      # only the files underneath.  So ignore 'sigma1' if it was the
      #      # host.
      #      src: "{{ local_configstore_path }}/{{ inventory_hostname }}/"
      #      dest: "{{ vlt_home }}/configuration_store"
      #      mode: 0644
      #    become_user: "{{ vlt_user }}"
      #    become: yes
      #    when: directory_check.stat.exists
      #  when: work_offline is defined and not(work_offline)
